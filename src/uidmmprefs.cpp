/****************************************************************************
** Form implementation generated from reading ui file 'uidmmprefs.ui'
**
** Created: Tue Dec 25 12:41:09 2007
**      by: The User Interface Compiler ($Id: qt/main.cpp   3.3.5   edited Aug 31 12:13 $)
**
** WARNING! All changes made in this file will be lost!
****************************************************************************/

#include "uidmmprefs.h"

#include <qvariant.h>
#include <prefwidget.h>
#include <qpushbutton.h>
#include <qlabel.h>
#include <qcombobox.h>
#include <qlineedit.h>
#include <qtoolbutton.h>
#include <qbuttongroup.h>
#include <qspinbox.h>
#include <qlayout.h>
#include <qtooltip.h>
#include <qwhatsthis.h>
#include <qimage.h>
#include <qpixmap.h>

#include "prefwidget.h"
static const unsigned char image0_data[] = { 
    0x89, 0x50, 0x4e, 0x47, 0x0d, 0x0a, 0x1a, 0x0a, 0x00, 0x00, 0x00, 0x0d,
    0x49, 0x48, 0x44, 0x52, 0x00, 0x00, 0x00, 0x16, 0x00, 0x00, 0x00, 0x16,
    0x08, 0x06, 0x00, 0x00, 0x00, 0xc4, 0xb4, 0x6c, 0x3b, 0x00, 0x00, 0x03,
    0xa7, 0x49, 0x44, 0x41, 0x54, 0x38, 0x8d, 0xb5, 0x95, 0xdb, 0x6b, 0xdc,
    0x45, 0x14, 0xc7, 0x3f, 0xbf, 0xdf, 0xfe, 0xe2, 0x6e, 0x9a, 0xdb, 0x36,
    0x31, 0x49, 0x63, 0x6d, 0x13, 0x2a, 0xb6, 0x22, 0x49, 0xa4, 0x60, 0xa9,
    0x54, 0x2b, 0x22, 0xf1, 0x41, 0x14, 0xd4, 0x10, 0xa8, 0x48, 0xfb, 0x60,
    0x41, 0x04, 0x09, 0x3e, 0xfa, 0xe0, 0xdd, 0x17, 0xdf, 0x7c, 0xa8, 0x7f,
    0x80, 0x14, 0xec, 0x83, 0x0f, 0xd2, 0x2a, 0x54, 0x8a, 0x90, 0xa8, 0x6d,
    0x64, 0x6b, 0x83, 0xa5, 0xde, 0x5a, 0x25, 0x06, 0x49, 0x9a, 0x26, 0x4d,
    0xb2, 0x9b, 0xcd, 0xe6, 0xb2, 0xbf, 0xcb, 0x5c, 0xce, 0xf8, 0xb0, 0x31,
    0x71, 0xad, 0x41, 0x11, 0x33, 0x30, 0xcc, 0x61, 0x66, 0xce, 0x67, 0xce,
    0x7c, 0xe7, 0xcc, 0x8c, 0x97, 0xcb, 0xe5, 0xd8, 0x8a, 0xe2, 0x6f, 0x09,
    0xf5, 0xbf, 0x82, 0xcf, 0x9c, 0xf3, 0xdd, 0xd9, 0xe1, 0xc0, 0xfd, 0xaf,
    0xe0, 0x91, 0xd1, 0x3a, 0x77, 0xfc, 0x58, 0x37, 0xc7, 0x8f, 0x76, 0x73,
    0xea, 0xb4, 0xdd, 0x14, 0xfe, 0xaf, 0xc1, 0x67, 0x87, 0x03, 0x17, 0xa9,
    0x3d, 0x6e, 0xf0, 0x85, 0x5e, 0x5a, 0xb2, 0x69, 0x5a, 0xb2, 0x69, 0x7a,
    0xee, 0x6d, 0xdf, 0x74, 0xbe, 0xd7, 0xf9, 0xfc, 0xcf, 0xee, 0xe9, 0x47,
    0xda, 0x10, 0x01, 0x65, 0x41, 0x1b, 0x41, 0x19, 0xf8, 0xf8, 0xdc, 0x34,
    0x5f, 0xbc, 0x16, 0x7a, 0x9f, 0x5f, 0xa8, 0x71, 0x5d, 0x77, 0x66, 0x79,
    0xec, 0xd1, 0x4e, 0x9a, 0x1a, 0x6a, 0x30, 0xc6, 0xa1, 0xb5, 0xc5, 0x18,
    0x47, 0x26, 0x93, 0xe2, 0xf5, 0x77, 0x2f, 0x71, 0xb4, 0x1f, 0xef, 0xaf,
    0xe0, 0x60, 0x77, 0x6b, 0x9a, 0x63, 0x03, 0xcd, 0x28, 0x03, 0xb1, 0x05,
    0x65, 0x20, 0xd1, 0x70, 0xa8, 0xa7, 0x8e, 0x4f, 0x2f, 0x8c, 0xb9, 0xfe,
    0xbe, 0x5d, 0xdc, 0xbf, 0xbf, 0x19, 0xad, 0x41, 0xa9, 0x6a, 0xe7, 0x28,
    0x32, 0x3c, 0x3b, 0xb0, 0x8f, 0xb7, 0xde, 0xff, 0xc1, 0xbd, 0x33, 0x98,
    0xae, 0x82, 0x07, 0xce, 0x55, 0xcb, 0x64, 0x14, 0xcc, 0x8c, 0x4e, 0xd3,
    0x60, 0x62, 0xde, 0x7c, 0xf9, 0x3e, 0xb6, 0xd5, 0x82, 0xb5, 0x7f, 0xbf,
    0x5d, 0x11, 0x47, 0xf7, 0xde, 0x2c, 0x87, 0xf7, 0x37, 0x03, 0xe5, 0xea,
    0x88, 0xad, 0x6c, 0x80, 0x4b, 0xd7, 0x23, 0xa6, 0x2f, 0x4f, 0xf0, 0x64,
    0x5f, 0x17, 0x5d, 0xbb, 0x6b, 0x37, 0xd5, 0x0f, 0x60, 0x71, 0xd5, 0x70,
    0xe2, 0x93, 0x39, 0x70, 0x0e, 0xad, 0xeb, 0x38, 0xf2, 0xf6, 0xa2, 0x9b,
    0x9a, 0xf3, 0x40, 0x04, 0x9c, 0x23, 0xf8, 0x73, 0x34, 0xcb, 0xb3, 0xcb,
    0x1c, 0x3a, 0xd0, 0xf1, 0x8f, 0xd0, 0x52, 0x59, 0x78, 0xe2, 0x8d, 0x31,
    0xfa, 0x1e, 0xba, 0x83, 0x3d, 0xbb, 0xea, 0x11, 0x81, 0xae, 0x7d, 0x3b,
    0x58, 0x29, 0x5b, 0xb4, 0x81, 0x13, 0xef, 0x7d, 0x4b, 0x60, 0x65, 0xc3,
    0xc1, 0xdf, 0xd9, 0xc6, 0xab, 0x1f, 0xfc, 0xc4, 0xc1, 0x03, 0x82, 0xb3,
    0x60, 0xc5, 0x62, 0xad, 0x20, 0xc6, 0x21, 0xd6, 0x61, 0xd6, 0xec, 0xcf,
    0xbe, 0x29, 0x32, 0xf0, 0x78, 0x27, 0xb7, 0xb5, 0x66, 0x39, 0x3f, 0x59,
    0x09, 0x32, 0x9d, 0x81, 0xef, 0xaf, 0x2c, 0x31, 0x35, 0x3c, 0x7e, 0xab,
    0x14, 0x67, 0x86, 0xf2, 0x74, 0xdd, 0xdd, 0x4a, 0xef, 0xce, 0x80, 0xed,
    0xb7, 0x6f, 0x23, 0x14, 0x47, 0xa4, 0x1c, 0x91, 0x82, 0x30, 0x76, 0x84,
    0x5a, 0x88, 0x63, 0x78, 0x71, 0xef, 0x0e, 0x92, 0x9a, 0x80, 0xd1, 0xdf,
    0x2a, 0x50, 0xcf, 0x87, 0x85, 0xc9, 0x88, 0xf9, 0x8b, 0x13, 0x20, 0xab,
    0xe4, 0x4e, 0xd6, 0x7a, 0x55, 0xe0, 0xa1, 0x91, 0x79, 0xc6, 0x4e, 0x75,
    0xb3, 0x30, 0xaf, 0x69, 0x6a, 0x09, 0x90, 0x7a, 0xc8, 0xaf, 0x40, 0x61,
    0x05, 0x26, 0x6f, 0xc2, 0xea, 0x22, 0x14, 0x12, 0x28, 0xcc, 0x43, 0xb1,
    0x64, 0x29, 0xe4, 0x13, 0xc2, 0x85, 0x55, 0x6e, 0x5e, 0x9d, 0xa7, 0x34,
    0x53, 0x86, 0xd8, 0x83, 0x86, 0x8a, 0xb6, 0x81, 0x31, 0x15, 0xe8, 0x97,
    0xa3, 0x11, 0x87, 0x7b, 0x1a, 0xa9, 0xcd, 0x40, 0x4d, 0x5b, 0x0d, 0x57,
    0xc6, 0x96, 0x69, 0xdd, 0xdd, 0xc8, 0xd8, 0x0d, 0x18, 0x9f, 0x84, 0xd9,
    0xbc, 0x21, 0x5f, 0xb0, 0xcc, 0x15, 0x0c, 0xf9, 0x82, 0x21, 0x2c, 0x45,
    0x44, 0xa5, 0x32, 0xa5, 0x99, 0x45, 0x9c, 0x72, 0x10, 0x02, 0x81, 0x05,
    0xd6, 0xc0, 0xb2, 0x96, 0x6e, 0xe7, 0x2f, 0x15, 0xe9, 0x7f, 0xb0, 0x99,
    0xb2, 0xc0, 0x5c, 0x02, 0xf3, 0x7e, 0x23, 0xbf, 0x7c, 0x67, 0x11, 0x97,
    0x22, 0x8c, 0x1d, 0x4a, 0x41, 0xac, 0x84, 0x44, 0x39, 0xe2, 0x44, 0x28,
    0xe4, 0x43, 0x74, 0xa8, 0xa1, 0xae, 0x0e, 0x6c, 0x02, 0x24, 0x90, 0x52,
    0xe0, 0x2a, 0x87, 0xe6, 0x8b, 0x15, 0x96, 0xcb, 0xf0, 0xe3, 0xb5, 0x12,
    0x47, 0xfa, 0xea, 0x19, 0x2b, 0xc2, 0x8d, 0x22, 0xc4, 0x40, 0x71, 0x45,
    0x58, 0x5a, 0x15, 0x12, 0xed, 0x88, 0x95, 0x43, 0x69, 0x28, 0x2d, 0x69,
    0x66, 0x67, 0x43, 0x6c, 0x90, 0xc6, 0xcf, 0xa4, 0xab, 0xd3, 0x25, 0x65,
    0xc8, 0x7d, 0xd8, 0xe8, 0xad, 0x1d, 0x1e, 0x0c, 0x5d, 0x5c, 0xe1, 0xe1,
    0xde, 0x26, 0x66, 0x57, 0xa1, 0x3e, 0x80, 0x8e, 0x0c, 0xd4, 0x5b, 0x68,
    0xec, 0x08, 0x58, 0x2a, 0x2a, 0x4c, 0xe0, 0xd1, 0x2c, 0x86, 0x46, 0x1d,
    0xd3, 0xd0, 0xae, 0xb8, 0x2b, 0x9b, 0x42, 0x92, 0x04, 0x09, 0x13, 0x4c,
    0xa2, 0x89, 0x42, 0x43, 0x7e, 0x41, 0x98, 0x9c, 0xd2, 0xeb, 0x6b, 0x04,
    0xc6, 0x3a, 0xbe, 0xca, 0x2d, 0xf0, 0xca, 0x33, 0xed, 0xdc, 0xd3, 0xb0,
    0xd6, 0xbb, 0x1d, 0xb4, 0x86, 0x38, 0x76, 0x68, 0xed, 0x93, 0x24, 0x86,
    0x24, 0xb1, 0x28, 0xe5, 0xa3, 0x54, 0x40, 0x1c, 0x1b, 0xb4, 0x0e, 0x88,
    0xe3, 0x5a, 0x94, 0xaa, 0x41, 0xa9, 0x0c, 0xa7, 0x47, 0x96, 0x38, 0x79,
    0x7d, 0x23, 0x11, 0xfc, 0x72, 0x68, 0x98, 0x98, 0x5c, 0xe1, 0xa9, 0x83,
    0xd5, 0x97, 0xc2, 0xf7, 0x21, 0x08, 0x7c, 0x52, 0x29, 0x0f, 0xdf, 0xf7,
    0xd7, 0x6c, 0x7f, 0xdd, 0xf6, 0xfd, 0xca, 0xd8, 0x1f, 0xf6, 0xd7, 0x57,
    0x23, 0x72, 0x1f, 0x65, 0xd7, 0xdf, 0x8b, 0x60, 0x61, 0xa6, 0xcc, 0x4b,
    0xcf, 0x75, 0xde, 0x72, 0xbb, 0x52, 0xa9, 0x4a, 0x75, 0x38, 0x44, 0x0c,
    0x89, 0xd2, 0x44, 0x71, 0x42, 0x14, 0x69, 0xc2, 0x50, 0x11, 0x27, 0x09,
    0x71, 0xa4, 0xd1, 0x5a, 0x48, 0xb4, 0x61, 0xfc, 0xd7, 0x10, 0x68, 0xda,
    0x90, 0x02, 0xdf, 0x63, 0xf8, 0x72, 0x91, 0x07, 0x06, 0x97, 0x70, 0xe2,
    0x10, 0x01, 0xc4, 0x21, 0x22, 0x58, 0x2b, 0x58, 0x2d, 0x18, 0x63, 0xb0,
    0x46, 0xb0, 0xc6, 0x60, 0x8c, 0xc5, 0x68, 0x8b, 0x18, 0xa9, 0xb4, 0x62,
    0x29, 0x87, 0x0e, 0xc2, 0xea, 0xc7, 0xcc, 0xdb, 0xaa, 0xcf, 0xf4, 0x77,
    0x97, 0x72, 0x1a, 0x4f, 0x2e, 0xf8, 0x08, 0x4a, 0x00, 0x00, 0x00, 0x00,
    0x49, 0x45, 0x4e, 0x44, 0xae, 0x42, 0x60, 0x82
};

static const unsigned char image1_data[] = { 
    0x89, 0x50, 0x4e, 0x47, 0x0d, 0x0a, 0x1a, 0x0a, 0x00, 0x00, 0x00, 0x0d,
    0x49, 0x48, 0x44, 0x52, 0x00, 0x00, 0x00, 0x16, 0x00, 0x00, 0x00, 0x16,
    0x08, 0x06, 0x00, 0x00, 0x00, 0xc4, 0xb4, 0x6c, 0x3b, 0x00, 0x00, 0x02,
    0xa2, 0x49, 0x44, 0x41, 0x54, 0x38, 0x8d, 0xb5, 0x94, 0xbd, 0x6f, 0x5c,
    0x55, 0x10, 0xc5, 0x7f, 0xcf, 0x1f, 0x49, 0x61, 0x05, 0x29, 0x8e, 0x03,
    0x29, 0xa0, 0xe2, 0x5f, 0x48, 0x41, 0x41, 0x85, 0xe8, 0x11, 0xa4, 0xa0,
    0x20, 0x12, 0x12, 0x15, 0x65, 0xe8, 0x53, 0xa1, 0x50, 0x20, 0x21, 0xe1,
    0x8a, 0x1a, 0x09, 0x29, 0x05, 0x08, 0x52, 0xd0, 0x50, 0x20, 0x51, 0xb1,
    0x2d, 0x42, 0x8a, 0xe8, 0xc3, 0x47, 0xb0, 0x63, 0xa3, 0xc4, 0x26, 0xeb,
    0xf8, 0xbd, 0x3b, 0x73, 0x0e, 0xc5, 0xbd, 0xfb, 0xb2, 0x6b, 0x2f, 0x09,
    0x14, 0x19, 0xe9, 0xe9, 0xad, 0xf6, 0xde, 0xfb, 0x9b, 0x73, 0xcf, 0xcc,
    0xbc, 0x6e, 0x32, 0x99, 0x70, 0xf3, 0xd6, 0x6d, 0x9b, 0x1a, 0xb6, 0xdb,
    0xd3, 0x7e, 0x03, 0x36, 0x48, 0x6a, 0xeb, 0x00, 0x75, 0x5d, 0x6d, 0x1f,
    0x98, 0xf7, 0xaf, 0x5e, 0xee, 0x98, 0x8b, 0xb5, 0x9b, 0xb7, 0x6e, 0xfb,
    0x8d, 0x37, 0x5f, 0x43, 0x36, 0xaf, 0xbf, 0xf2, 0x32, 0xfb, 0xf7, 0x7b,
    0x56, 0x57, 0x3b, 0xd6, 0x56, 0x3b, 0xce, 0x6d, 0xac, 0xf3, 0xb4, 0xb8,
    0xf1, 0xd9, 0xf7, 0x48, 0xe6, 0xda, 0xf5, 0x6f, 0xbc, 0x7d, 0xe3, 0xad,
    0x11, 0xbe, 0x66, 0x40, 0xaa, 0x2a, 0x01, 0x3e, 0xf8, 0xf0, 0xab, 0xf1,
    0xd0, 0x17, 0x9f, 0x5e, 0x5d, 0x0a, 0xb3, 0x4d, 0x64, 0x7d, 0xc6, 0xff,
    0xda, 0x8d, 0x46, 0x30, 0x86, 0xc8, 0xc4, 0x8f, 0xf7, 0xf0, 0xee, 0xdb,
    0xaf, 0x12, 0x8a, 0xa5, 0x50, 0xd9, 0x44, 0x98, 0xbe, 0x08, 0xc9, 0x44,
    0x88, 0x7b, 0xf7, 0x0e, 0x89, 0x38, 0x01, 0x36, 0x35, 0xb3, 0xe7, 0xc8,
    0x26, 0x59, 0xe9, 0xba, 0x93, 0x4c, 0x4a, 0x88, 0xa1, 0x88, 0x48, 0x53,
    0x22, 0xe9, 0x87, 0xe4, 0x8f, 0xbb, 0x0f, 0x28, 0x43, 0x39, 0xb5, 0x77,
    0xcd, 0x86, 0x88, 0xaa, 0x38, 0xc2, 0x7c, 0xfe, 0xc9, 0x3b, 0x74, 0x1d,
    0x74, 0x5d, 0xb7, 0x70, 0x8b, 0x12, 0xa2, 0x44, 0x85, 0x1e, 0xf7, 0x41,
    0x3f, 0x04, 0x3f, 0xfd, 0xb2, 0xc7, 0x50, 0x62, 0x2c, 0xec, 0x09, 0xb0,
    0x19, 0x4a, 0x02, 0xf0, 0xe5, 0x77, 0x3f, 0x93, 0x59, 0x0f, 0xa7, 0x44,
    0x89, 0x40, 0x69, 0x22, 0x92, 0x12, 0x22, 0x53, 0xa4, 0x84, 0x52, 0x3c,
    0x9c, 0x0e, 0xec, 0xec, 0x1e, 0xa0, 0x14, 0x9e, 0xf3, 0x7a, 0xce, 0x0a,
    0xea, 0xa2, 0x21, 0xb2, 0x1e, 0x96, 0xbc, 0x00, 0x8d, 0x10, 0x99, 0x49,
    0xca, 0x64, 0xd4, 0xf7, 0xce, 0xee, 0x01, 0x29, 0xe1, 0xd4, 0x82, 0x8d,
    0x23, 0x18, 0x43, 0x89, 0xc4, 0xcc, 0xc0, 0x49, 0x36, 0x75, 0xca, 0x7a,
    0x7d, 0x49, 0x73, 0x50, 0x31, 0x0c, 0x59, 0xc5, 0xc8, 0x18, 0xa3, 0x25,
    0xe0, 0x15, 0x03, 0x43, 0x24, 0x92, 0x5b, 0xdb, 0xb5, 0xf6, 0x83, 0x13,
    0x43, 0x52, 0xdf, 0x18, 0x4c, 0xc7, 0xd6, 0xc5, 0xe7, 0xd8, 0xda, 0x3a,
    0x57, 0xeb, 0xb0, 0x54, 0x31, 0xae, 0xbe, 0x86, 0x78, 0xef, 0xca, 0xe5,
    0xda, 0x15, 0x6d, 0xaa, 0xb2, 0x79, 0x2d, 0xcd, 0x7c, 0x37, 0x92, 0xb8,
    0x7f, 0x18, 0x0c, 0x51, 0x2d, 0xf8, 0x78, 0xfb, 0x5b, 0xe4, 0xa5, 0xc5,
    0x83, 0xd2, 0x8a, 0x37, 0x4b, 0xfc, 0x6f, 0xd0, 0x08, 0x11, 0x29, 0xf6,
    0x1f, 0x4c, 0x91, 0xcc, 0xd9, 0xb3, 0x67, 0x48, 0x65, 0xbd, 0xc6, 0x69,
    0xc5, 0x90, 0x39, 0xfb, 0x0e, 0x98, 0xdf, 0x76, 0xf6, 0xaa, 0x32, 0x43,
    0x66, 0x56, 0x68, 0xbb, 0x51, 0x4a, 0x1c, 0x3e, 0x0c, 0x8e, 0x8e, 0x83,
    0x34, 0xbc, 0xb0, 0xb9, 0x89, 0x31, 0x4b, 0x04, 0xcf, 0x26, 0xaf, 0x66,
    0x34, 0xf0, 0xe2, 0xa5, 0x8b, 0xa3, 0xda, 0x08, 0x51, 0x1a, 0x34, 0x52,
    0x1c, 0x4c, 0x07, 0x1e, 0x0d, 0x47, 0x6c, 0xac, 0xd4, 0xa2, 0xf6, 0x25,
    0x97, 0x42, 0x47, 0xc5, 0x25, 0x62, 0xb4, 0xe2, 0xce, 0xdd, 0xdd, 0xc7,
    0xe0, 0x14, 0xa5, 0x08, 0xb9, 0x2a, 0x9d, 0x3e, 0x8a, 0x96, 0xc8, 0x64,
    0x26, 0x5b, 0x9b, 0x17, 0x96, 0x53, 0xc7, 0xe2, 0xb5, 0x39, 0x97, 0xcc,
    0x4b, 0x97, 0x9e, 0x5f, 0x50, 0xfb, 0xf7, 0x74, 0xe0, 0xcf, 0xfd, 0x29,
    0xeb, 0x67, 0x92, 0x8d, 0x4e, 0x0c, 0xa5, 0xda, 0x23, 0xd7, 0xc4, 0x4f,
    0x00, 0x33, 0xf6, 0xa1, 0x6d, 0xee, 0xec, 0xec, 0x51, 0x4a, 0x72, 0x74,
    0x1c, 0xf4, 0x7d, 0xd2, 0x97, 0xa4, 0x84, 0xe9, 0x4b, 0x50, 0x4a, 0xf3,
    0xba, 0x0d, 0xd1, 0x85, 0xf3, 0xe7, 0x9f, 0x0c, 0xce, 0xa8, 0x5d, 0xf1,
    0xc3, 0x8f, 0xbf, 0x37, 0xe5, 0x55, 0xcd, 0x4c, 0x79, 0x66, 0x55, 0x9f,
    0xe1, 0xb1, 0xb0, 0x16, 0xfc, 0x7a, 0xf8, 0x17, 0x6a, 0xf5, 0x59, 0x5f,
    0x5f, 0x5d, 0x00, 0x77, 0x93, 0xc9, 0x84, 0x6b, 0xd7, 0xbf, 0x5e, 0xec,
    0x97, 0xd3, 0xdd, 0xf3, 0xd4, 0xd8, 0xfe, 0xe8, 0xca, 0xc2, 0xe7, 0xb0,
    0x9b, 0x4c, 0x26, 0xff, 0x9f, 0xf2, 0x1f, 0x62, 0xe5, 0x99, 0x50, 0x9f,
    0x25, 0xf8, 0x1f, 0xed, 0xcc, 0xa6, 0x20, 0x70, 0xce, 0x49, 0x8c, 0x00,
    0x00, 0x00, 0x00, 0x49, 0x45, 0x4e, 0x44, 0xae, 0x42, 0x60, 0x82
};


/*
 *  Constructs a UIDmmPrefs which is a child of 'parent', with the
 *  name 'name'.' 
 */
UIDmmPrefs::UIDmmPrefs( QWidget* parent,  const char* name )
    : PrefWidget( parent, name )
{
    QImage img;
    img.loadFromData( image0_data, sizeof( image0_data ), "PNG" );
    image0 = img;
    img.loadFromData( image1_data, sizeof( image1_data ), "PNG" );
    image1 = img;
    if ( !name )
	setName( "UIDmmPrefs" );
    UIDmmPrefsLayout = new QVBoxLayout( this, 10, 5, "UIDmmPrefsLayout"); 

    ui_hint = new QLabel( this, "ui_hint" );
    ui_hint->setSizePolicy( QSizePolicy( (QSizePolicy::SizeType)1, (QSizePolicy::SizeType)0, 0, 0, ui_hint->sizePolicy().hasHeightForWidth() ) );
    ui_hint->setFrameShape( QLabel::MShape );
    ui_hint->setFrameShadow( QLabel::MShadow );
    UIDmmPrefsLayout->addWidget( ui_hint );

    layout2 = new QHBoxLayout( 0, 0, 5, "layout2"); 

    ui_model = new QComboBox( FALSE, this, "ui_model" );
    ui_model->setSizeLimit( 20 );
    ui_model->setAutoCompletion( TRUE );
    layout2->addWidget( ui_model );

    ui_filename = new QLineEdit( this, "ui_filename" );
    ui_filename->setEnabled( FALSE );
    ui_filename->setFrameShape( QLineEdit::StyledPanel );
    ui_filename->setReadOnly( TRUE );
    layout2->addWidget( ui_filename );

    ui_load = new QToolButton( this, "ui_load" );
    ui_load->setEnabled( FALSE );
    ui_load->setIconSet( QIconSet( image0 ) );
    layout2->addWidget( ui_load );

    ui_save = new QToolButton( this, "ui_save" );
    ui_save->setEnabled( FALSE );
    ui_save->setIconSet( QIconSet( image1 ) );
    layout2->addWidget( ui_save );
    UIDmmPrefsLayout->addLayout( layout2 );

    ButtonGroup11 = new QButtonGroup( this, "ButtonGroup11" );
    ButtonGroup11->setColumnLayout(0, Qt::Vertical );
    ButtonGroup11->layout()->setSpacing( 5 );
    ButtonGroup11->layout()->setMargin( 10 );
    ButtonGroup11Layout = new QGridLayout( ButtonGroup11->layout() );
    ButtonGroup11Layout->setAlignment( Qt::AlignTop );

    layout2_2 = new QHBoxLayout( 0, 0, 2, "layout2_2"); 

    port = new QComboBox( FALSE, ButtonGroup11, "port" );
    port->setSizePolicy( QSizePolicy( (QSizePolicy::SizeType)3, (QSizePolicy::SizeType)0, 0, 0, port->sizePolicy().hasHeightForWidth() ) );
    layout2_2->addWidget( port );

    portNumber = new QSpinBox( ButtonGroup11, "portNumber" );
    layout2_2->addWidget( portNumber );

    ui_scanPorts = new QPushButton( ButtonGroup11, "ui_scanPorts" );
    layout2_2->addWidget( ui_scanPorts );

    ButtonGroup11Layout->addMultiCellLayout( layout2_2, 0, 1, 1, 1 );

    ui_bitsLabel = new QLabel( ButtonGroup11, "ui_bitsLabel" );
    ui_bitsLabel->setAlignment( int( QLabel::AlignVCenter | QLabel::AlignRight ) );

    ButtonGroup11Layout->addWidget( ui_bitsLabel, 2, 0 );

    ui_parityLabel = new QLabel( ButtonGroup11, "ui_parityLabel" );
    ui_parityLabel->setAlignment( int( QLabel::AlignVCenter | QLabel::AlignRight ) );

    ButtonGroup11Layout->addWidget( ui_parityLabel, 3, 0 );

    stopBitsCombo = new QComboBox( FALSE, ButtonGroup11, "stopBitsCombo" );

    ButtonGroup11Layout->addMultiCellWidget( stopBitsCombo, 1, 2, 3, 3 );

    displayCombo = new QComboBox( FALSE, ButtonGroup11, "displayCombo" );

    ButtonGroup11Layout->addWidget( displayCombo, 3, 3 );

    ui_stopLabel = new QLabel( ButtonGroup11, "ui_stopLabel" );
    ui_stopLabel->setAlignment( int( QLabel::AlignVCenter | QLabel::AlignRight ) );

    ButtonGroup11Layout->addMultiCellWidget( ui_stopLabel, 1, 2, 2, 2 );

    baudRate = new QComboBox( FALSE, ButtonGroup11, "baudRate" );

    ButtonGroup11Layout->addWidget( baudRate, 0, 3 );

    ui_displayLabel = new QLabel( ButtonGroup11, "ui_displayLabel" );
    ui_displayLabel->setAlignment( int( QLabel::AlignVCenter | QLabel::AlignRight ) );

    ButtonGroup11Layout->addWidget( ui_displayLabel, 3, 2 );

    ui_baudLabel = new QLabel( ButtonGroup11, "ui_baudLabel" );
    ui_baudLabel->setAlignment( int( QLabel::AlignVCenter | QLabel::AlignRight ) );

    ButtonGroup11Layout->addWidget( ui_baudLabel, 0, 2 );

    TextLabel2 = new QLabel( ButtonGroup11, "TextLabel2" );
    TextLabel2->setAlignment( int( QLabel::AlignVCenter | QLabel::AlignRight ) );

    ButtonGroup11Layout->addWidget( TextLabel2, 0, 0 );

    bitsCombo = new QComboBox( FALSE, ButtonGroup11, "bitsCombo" );

    ButtonGroup11Layout->addWidget( bitsCombo, 2, 1 );

    parityCombo = new QComboBox( FALSE, ButtonGroup11, "parityCombo" );

    ButtonGroup11Layout->addWidget( parityCombo, 3, 1 );
    UIDmmPrefsLayout->addWidget( ButtonGroup11 );

    ui_protocol = new QButtonGroup( this, "ui_protocol" );
    ui_protocol->setColumnLayout(0, Qt::Vertical );
    ui_protocol->layout()->setSpacing( 5 );
    ui_protocol->layout()->setMargin( 10 );
    ui_protocolLayout = new QGridLayout( ui_protocol->layout() );
    ui_protocolLayout->setAlignment( Qt::AlignTop );

    protocolCombo = new QComboBox( FALSE, ui_protocol, "protocolCombo" );

    ui_protocolLayout->addMultiCellWidget( protocolCombo, 0, 0, 0, 2 );

    TextLabel1_4 = new QLabel( ui_protocol, "TextLabel1_4" );

    ui_protocolLayout->addWidget( TextLabel1_4, 1, 0 );

    ui_numValues = new QSpinBox( ui_protocol, "ui_numValues" );
    ui_numValues->setMaxValue( 4 );
    ui_numValues->setMinValue( 1 );

    ui_protocolLayout->addWidget( ui_numValues, 1, 1 );
    Spacer1 = new QSpacerItem( 20, 20, QSizePolicy::Expanding, QSizePolicy::Minimum );
    ui_protocolLayout->addItem( Spacer1, 1, 2 );
    UIDmmPrefsLayout->addWidget( ui_protocol );
    Spacer1_3 = new QSpacerItem( 20, 16, QSizePolicy::Minimum, QSizePolicy::Expanding );
    UIDmmPrefsLayout->addItem( Spacer1_3 );

    message2 = new QLabel( this, "message2" );
    message2->setSizePolicy( QSizePolicy( (QSizePolicy::SizeType)1, (QSizePolicy::SizeType)3, 0, 0, message2->sizePolicy().hasHeightForWidth() ) );
    message2->setAlignment( int( QLabel::WordBreak | QLabel::AlignBottom | QLabel::AlignLeft ) );
    UIDmmPrefsLayout->addWidget( message2 );

    message = new QLabel( this, "message" );
    message->setSizePolicy( QSizePolicy( (QSizePolicy::SizeType)1, (QSizePolicy::SizeType)3, 0, 0, message->sizePolicy().hasHeightForWidth() ) );
    message->setAlignment( int( QLabel::WordBreak | QLabel::AlignBottom | QLabel::AlignLeft ) );
    UIDmmPrefsLayout->addWidget( message );
    languageChange();
    resize( QSize(610, 640).expandedTo(minimumSizeHint()) );
    clearWState( WState_Polished );

    // tab order
    setTabOrder( ui_model, port );
    setTabOrder( port, baudRate );
    setTabOrder( baudRate, bitsCombo );
    setTabOrder( bitsCombo, stopBitsCombo );
    setTabOrder( stopBitsCombo, parityCombo );
    setTabOrder( parityCombo, displayCombo );
    setTabOrder( displayCombo, protocolCombo );
    setTabOrder( protocolCombo, ui_numValues );

    // buddies
    ui_bitsLabel->setBuddy( bitsCombo );
    ui_parityLabel->setBuddy( stopBitsCombo );
    ui_stopLabel->setBuddy( stopBitsCombo );
    ui_displayLabel->setBuddy( stopBitsCombo );
    ui_baudLabel->setBuddy( baudRate );
    TextLabel2->setBuddy( port );
    TextLabel1_4->setBuddy( ui_numValues );
}

/*
 *  Destroys the object and frees any allocated resources
 */
UIDmmPrefs::~UIDmmPrefs()
{
    // no need to delete child widgets, Qt does it all for us
}

/*
 *  Sets the strings of the subwidgets using the current
 *  language.
 */
void UIDmmPrefs::languageChange()
{
    setCaption( tr( "QFrameForm" ) );
    ui_hint->setText( tr( "<b>Select yor DMM or set parameter manually</b>" ) );
    QWhatsThis::add( ui_model, tr( "Here you may select your DMM model. If your DMM is not in the list, try to find working settings and mail them to me (<font color=blue><u>qtdmm@mtoussaint.de</u></font>). So I can add them to the list in the next release." ) );
    ui_load->setText( QString::null );
    QToolTip::add( ui_load, tr( "Load Settings" ) );
    ui_save->setText( QString::null );
    QToolTip::add( ui_save, tr( "Save Settings" ) );
    ButtonGroup11->setTitle( tr( "Port settings" ) );
    port->clear();
    port->insertItem( tr( "/dev/ttyS" ) );
    port->insertItem( tr( "/dev/usb/ttyUSB" ) );
    port->insertItem( tr( "/dev/ttyUSB" ) );
    port->insertItem( tr( "/dev/tty.usbserial" ) );
    port->setCurrentItem( 0 );
    QWhatsThis::add( port, tr( "Choose the serial device here. <i>(Hint for DOS people: /dev/ttyS0 corresponds to COM1. /dev/ttyS1 to COM2 ...)</i>" ) );
    QWhatsThis::add( portNumber, tr( "Enter the number of the port." ) );
    ui_scanPorts->setText( tr( "Scan" ) );
    QWhatsThis::add( ui_scanPorts, tr( "Clicke here to scan for new devices." ) );
    ui_bitsLabel->setText( tr( "&Bits:" ) );
    ui_parityLabel->setText( tr( "Parit&y" ) );
    stopBitsCombo->clear();
    stopBitsCombo->insertItem( tr( "1 Stop bit" ) );
    stopBitsCombo->insertItem( tr( "2 Stop bits" ) );
    QWhatsThis::add( stopBitsCombo, tr( "Number of stop bits for serial communication." ) );
    displayCombo->clear();
    displayCombo->insertItem( tr( "2000" ) );
    displayCombo->insertItem( tr( "4000" ) );
    displayCombo->insertItem( tr( "20000" ) );
    displayCombo->insertItem( tr( "50000" ) );
    displayCombo->insertItem( tr( "100000" ) );
    displayCombo->insertItem( tr( "200000" ) );
    displayCombo->insertItem( tr( "400000" ) );
    displayCombo->insertItem( tr( "1000000" ) );
    displayCombo->insertItem( tr( "6000" ) );
    displayCombo->insertItem( tr( "40000" ) );
    QWhatsThis::add( displayCombo, tr( "Number of display digits.\n"
"<ul><li>3 1/2 - 2000 Counts</li>\n"
"<li>3 3/4 - 4000 Counts</li>\n"
"<li>4 1/2 - 20000 Counts</li>\n"
"<li>4 3/4 - 40000 Counts</li>\n"
"</ul>" ) );
    ui_stopLabel->setText( tr( "&Stop bits:" ) );
    baudRate->clear();
    baudRate->insertItem( tr( "600 baud" ) );
    baudRate->insertItem( tr( "1200 baud" ) );
    baudRate->insertItem( tr( "1800 baud" ) );
    baudRate->insertItem( tr( "2400 baud" ) );
    baudRate->insertItem( tr( "4800 baud" ) );
    baudRate->insertItem( tr( "9600 baud" ) );
    baudRate->insertItem( tr( "19200 baud" ) );
    baudRate->setCurrentItem( 0 );
    QWhatsThis::add( baudRate, tr( "Select the baud rate for the DMM here. If you encounter problems connecting to your DMM try lowering the baud rate. I had some problems with my <b>Metex ME-32</b>. The Documentation said 1200 baud but it only worked at 600." ) );
    ui_displayLabel->setText( tr( "&Digits" ) );
    ui_baudLabel->setText( tr( "Baud &rate:" ) );
    TextLabel2->setText( tr( "&Port:" ) );
    bitsCombo->clear();
    bitsCombo->insertItem( tr( "5 bits" ) );
    bitsCombo->insertItem( tr( "6 bits" ) );
    bitsCombo->insertItem( tr( "7 bits" ) );
    bitsCombo->insertItem( tr( "8 bits" ) );
    QWhatsThis::add( bitsCombo, tr( "Number of bits for serial communication." ) );
    parityCombo->clear();
    parityCombo->insertItem( tr( "None" ) );
    parityCombo->insertItem( tr( "Even" ) );
    parityCombo->insertItem( tr( "Odd" ) );
    QWhatsThis::add( parityCombo, tr( "Parity for serial communication. May be None, Odd or Even." ) );
    ui_protocol->setTitle( tr( "Protocol" ) );
    protocolCombo->clear();
    protocolCombo->insertItem( tr( "14 bytes ASCII, polling (Metex/Voltcraft)" ) );
    protocolCombo->insertItem( tr( "11 bytes ASCII, continuous (PeakTech 451)" ) );
    protocolCombo->insertItem( tr( "14 bytes ASCII, continuous (Voltcraft)" ) );
    protocolCombo->insertItem( tr( "15 bytes ASCII, continuous (Voltcraft)" ) );
    protocolCombo->insertItem( tr( "11 bytes binary, continuous (M9803R)" ) );
    protocolCombo->insertItem( tr( "14 bytes binary, continuous (VC820)" ) );
    protocolCombo->insertItem( tr( "22 bytes ASCII, continuous (IsoTech)" ) );
    protocolCombo->insertItem( tr( "12 bytes binary, continuous (VC940)" ) );
    protocolCombo->insertItem( tr( "14 bytes ASCII/binary, continuous (QM1537)" ) );
    protocolCombo->insertItem( tr( "9 bytes binary, continuous (RS 22-812)" ) );
    QWhatsThis::add( protocolCombo, tr( "Here you may select the Communication type. If you have a not \"officially\" supported multimeter, just try out the existing protocols. If you are lucky it may work. If you find working settings, send the to me." ) );
    TextLabel1_4->setText( tr( "&Number of values:" ) );
    QWhatsThis::add( ui_numValues, tr( "Some multimeter send several lines of data containing different measured values. As QtDMM only shows one variable here you can set the number of lines to be ignored for each measurement (That means that QtDMM only uses the first line)." ) );
    message2->setText( tr( "These protocoll settings have not been confirmed by a user yet. If you own this model and can confirm that it works. Please give me a note. <u><font color=blue>qtdmm@mtoussaint.de</font></u>" ) );
    message->setText( tr( "If you have a DMM not listed above and find manual settings that work, please report to <font color=blue><u>qtdmm@mtoussaint.de</u></font>. This way future users of this DMM can benefit from your help." ) );
}

